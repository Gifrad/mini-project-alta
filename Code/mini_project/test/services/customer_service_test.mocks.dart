// Mocks generated by Mockito 5.3.2 from annotations
// in mini_project/test/services/customer_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mini_project/models/customer.dart' as _i3;
import 'package:mini_project/services/customer_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CustomerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerService extends _i1.Mock implements _i2.CustomerService {
  MockCustomerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.CustomerModel> get customer => (super.noSuchMethod(
        Invocation.getter(#customer),
        returnValue: <_i3.CustomerModel>[],
      ) as List<_i3.CustomerModel>);
  @override
  set customer(List<_i3.CustomerModel>? _customer) => super.noSuchMethod(
        Invocation.setter(
          #customer,
          _customer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<List<_i3.CustomerModel>> getCustomer() => (super.noSuchMethod(
        Invocation.method(
          #getCustomer,
          [],
        ),
        returnValue:
            _i4.Future<List<_i3.CustomerModel>>.value(<_i3.CustomerModel>[]),
      ) as _i4.Future<List<_i3.CustomerModel>>);
  @override
  _i4.Future<String> addCustomer(_i3.CustomerModel? cust) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCustomer,
          [cust],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<String> updateCustomer(_i3.CustomerModel? cust) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCustomer,
          [cust],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<String> updatePayCustomer(_i3.CustomerModel? cust) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePayCustomer,
          [cust],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<String> deleteCustomer(_i3.CustomerModel? cust) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCustomer,
          [cust],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
}
